/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica2;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author LuisMiguel
 */
public class Tablero extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form Tablero
     */
    int tamano;
    volatile int sleep;
    volatile Boolean estado;
    Thread hilo;
    Celula[][] botones;

    public Tablero(int tamano) {
        setVisible(true);
        this.tamano = tamano;
        botones = new Celula[tamano + 2][tamano + 2];
        initComponents();
        initBotones();
        estado = false;
        sleep = slider.getValue();
        hilo = new Thread(this);
    }

    public Tablero() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelinferior = new javax.swing.JPanel();
        slider = new javax.swing.JSlider();
        comenzarbutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelsuperior = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Game of Life");
        getContentPane().setLayout(new java.awt.BorderLayout(10, 10));

        slider.setMaximum(50);
        slider.setMinimum(5);
        slider.setValue(10);
        slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });
        panelinferior.add(slider);

        comenzarbutton.setText("Comenzar");
        comenzarbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comenzarbuttonActionPerformed(evt);
            }
        });
        panelinferior.add(comenzarbutton);

        getContentPane().add(panelinferior, java.awt.BorderLayout.PAGE_END);

        panelsuperior.setLayout(new java.awt.GridLayout(0, tamano+2));
        jScrollPane1.setViewportView(panelsuperior);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initBotones() {
        int i;
        int j;
        for (i = 0; i <= tamano + 1; i++) {
            for (j = 0; j <= tamano + 1; j++) {
                botones[i][j] = new Celula();
                botones[i][j].setText(i + ", " + j);
                panelsuperior.add(botones[i][j]);
                if (i == 0 || i == tamano + 1 || j == 0 || j == tamano + 1) {
                    botones[i][j].setVisible(false);
                }
            }
        }
    }

    private int analizarVecinos(Celula[][] aux, int i, int j) {
        return uno(aux, i, j) + dos(aux, i, j) + tres(aux, i, j) + cuatro(aux, i, j) + cinco(aux, i, j) + seis(aux, i, j) + siete(aux, i, j) + ocho(aux, i, j);
    }

    private int uno(Celula[][] aux, int i, int j) {
        if (aux[i - 1][j + 1].getEstado()) {
            return 1;
        } else {
            return 0;
        }
    }

    private int dos(Celula[][] aux, int i, int j) {
        if (aux[i][j + 1].getEstado()) {
            return 1;
        } else {
            return 0;
        }
    }

    private int tres(Celula[][] aux, int i, int j) {
        if (aux[i + 1][j + 1].getEstado()) {
            return 1;
        } else {
            return 0;
        }
    }

    private int cuatro(Celula[][] aux, int i, int j) {
        if (aux[i - 1][j].getEstado()) {
            return 1;
        } else {
            return 0;
        }
    }

    private int cinco(Celula[][] aux, int i, int j) {
        if (aux[i + 1][j].getEstado()) {
            return 1;
        } else {
            return 0;
        }
    }

    private int seis(Celula[][] aux, int i, int j) {
        if (aux[i - 1][j - 1].getEstado()) {
            return 1;
        } else {
            return 0;
        }
    }

    private int siete(Celula[][] aux, int i, int j) {
        if (aux[i][j - 1].getEstado()) {
            return 1;
        } else {
            return 0;
        }
    }

    private int ocho(Celula[][] aux, int i, int j) {
        if (aux[i + 1][j - 1].getEstado()) {
            return 1;
        } else {
            return 0;
        }
    }


    private void comenzarbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comenzarbuttonActionPerformed
        // TODO add your handling code here:
        if(estado){
            comenzarbutton.setText("Comenzar");
            estado = false;
        }else{
            estado = true;
            hilo.start();
            comenzarbutton.setText("Detener");
        }       
    }//GEN-LAST:event_comenzarbuttonActionPerformed

    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        // TODO add your handling code here:
        sleep = slider.getValue();
    }//GEN-LAST:event_sliderStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tablero().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton comenzarbutton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelinferior;
    private javax.swing.JPanel panelsuperior;
    private javax.swing.JSlider slider;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        int i;
        int j;
        Celula aux[][] = botones;
        try {
            while (estado) {
                for (i = 1; i <= tamano; i++) {
                    for (j = 1; j <= tamano; j++) {
                        try {
                            if (aux[i][j].getEstado()) {
                                if (analizarVecinos(aux, i, j) < 2 || analizarVecinos(aux, i, j) > 3) {
                                    botones[i][j].setEstado(false);
                                }
                            } else if (analizarVecinos(aux, i, j) == 3) {
                                botones[i][j].setEstado(true);
                            }
                            Thread.sleep(sleep);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Tablero.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }
                }
            }
        } catch (RuntimeException e) {
            System.out.println(e);
        }

    }
}
